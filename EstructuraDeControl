// estructurasDeControl.js

// Ejercicio 1: Condicionales if-else
// Instrucción: Escribe una función que reciba un número y verifique si es par o impar.
// Imprime "El número es par" o "El número es impar" según corresponda.
function verificarParidad(numero)  {//inicio del codigo
    if (numero % 2 === 0) {
        console.log ("El número es par");
    } else {
        console.log("El número es impar");
    }
verificarParidad(5);
verificarParidad(2);   //fin del codigo 
// Tu código aquí
}

// Ejercicio 2: Condicionales anidados
// Instrucción: Escribe una función que reciba una edad y determine si la persona es:
// "Menor de edad" (menor a 18), "Adulto" (entre 18 y 65), o "Adulto mayor" (mayor a 65).
function clasificarEdad(edad) {//inicio del codigo
    if (edad<18) {
        console.log("Es menor de Edad");
    }if (edad>=18 && anho<=65) {
        console.log("Es Adulto");
    }if (edad>65) {
        console.log("Es Adulto Mayor");
    }
}
clasificarEdad(17);
// Tu código aquí
}

// Ejercicio 3: Bucles while
// Instrucción: Crea una función que reciba un número entero positivo y utilice un bucle `while` para imprimir todos los números desde ese número hasta 0.
function cuentaRegresiva(numero) {
    // Tu código aquí//inicio del codigo
    if (numero < 0) {
        console.log("Por favor, ingresa un número positivo.");
        return;
    }

    let i = numero;
    while (i >= 0) {
        console.log(i);
        i--;
    }
}
cuentaRegresiva(25);//fin del codigo}

// Ejercicio 4: Bucles do-while
// Instrucción: Escribe una función que imprima "Estoy aprendiendo JavaScript" 5 veces utilizando un bucle `do-while`.
function repetirMensaje() {
    // Tu código aquí//inicio del codigo
    let cont =0;
    do {
        console.log("Estoy Aprendiendo JavaScrip");
    cont++;
    } while (cont<5);
}
repetirMensaje();//fin del codigo
// Ejercicio 5: Bucle for
// Instrucción: Escribe una función que reciba un número entero positivo y utilice un bucle `for` para imprimir todos los números pares entre 0 y ese número.
function imprimirPares(numero) {
    // Tu código aquí
//inicio del codigo
for (let  i= 0; i<= numero; i++) {
  console.log(i);
}
}  
imprimirPares(25);//fin del codigo

// Ejercicio 6: Uso de break
// Instrucción: Escribe una función que recorra los números del 1 al 10, pero detén el bucle cuando el número sea igual a 6.
function detenerEnSeis() {
    // Tu código aquí
for (let i = 1; i < 10; i++) {//inicio del codigo
     if (i === 6) {
         break;
     }   
    console.log(i);
    }//fin del codigo
}
detenerEnSeis();

// Ejercicio 7: Uso de continue
// Instrucción: Crea una función que recorra los números del 1 al 10, pero que se salte el número 5 usando `continue`.
function saltarCinco() {//inicio del codigo
    // Tu código aquí
for (let i = 1; i < 10; i++) {
  if (i == 5) {
    continue;
  }
    if (i === 10) {
        break;
    }
    console.log(i);
}
}
saltarCinco();//fin del codigo
// Ejercicio 8: Switch básico
// Instrucción: Escribe una función que reciba un número del 1 al 7 y devuelva el día de la semana correspondiente (1 es "Lunes", 2 es "Martes", ..., 7 es "Domingo"). Usa la estructura `switch`.
function obtenerDiaSemana(dia) {//inicio del codigo
    // Tu código aquí

switch (dia) {
  case 1:
    console.log("lunes");
    break;
  case 2:
    console.log("martes");
    break;
  case 3:
    console.log("miercoles");
    break;
  case 4:
    console.log("jueves");
    break;
        case 5:
    console.log("viernes");
    break;
        case 6:
    console.log("sabado");
    break;
        case 7:
    console.log("domingo");
    break;
  default:
    console.log("no hay mas dias");
    break;
}
}
obtenerDiaSemana(2);//fin del codigo
// Ejercicio 9: Switch con múltiples casos
// Instrucción: Escribe una función que reciba un carácter y devuelva si es una vocal. Utiliza un `switch` y agrupa los casos para las vocales (a, e, i, o, u).
function esVocal(letra) {//inicio del codigo
    // Tu código aquí
//inicio del codigo
        switch(letra){
            case 'a':
            case 'e':
            case 'i':
            case 'o':
            case 'u':
                return ("Es Vocal");
            default:
                return ("No es Vocal");
                break;
        }
}
esVocal ('a'); //fin del codigo, dependiendo de que letra sea colocada dira si es vocal o no vocal
// Ejercicio 10: Condicionales complejos con operadores lógicos
// Instrucción: Escribe una función que reciba tres números y determine si todos son positivos, al menos uno es negativo, o todos son negativos. Usa operadores lógicos (`&&`, `||`).
function evaluarNumeros(a, b, c) {//inicio del codigo
    // Tu código aquí
    if (a > 0 && b > 0 && c > 0) {
        return "Todos son positivos.";
    } else if (a < 0 || b < 0 || c < 0) {
        if (a < 0 && b < 0 && c < 0) {
            return "Todos son negativos.";
        } else {
            return "Al menos uno es negativo.";
        }
    } 
}
evaluarNumeros(5, 3, 2);//fin del codigo, aca podes cambiar las variables de los nros. para poder acceder a los distintos resultados


// Exportar todas las funciones
export {
    verificarParidad,
    clasificarEdad,
    cuentaRegresiva,
    repetirMensaje,
    imprimirPares,
    detenerEnSeis,
    saltarCinco,
    obtenerDiaSemana,
    esVocal,
    evaluarNumeros,
};
